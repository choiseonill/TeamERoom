<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- oracle DB연결 -->
	<bean	id="dataSource"
			class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"		/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"	/>		
		<property name="username" value="SOLPROJECT"/>		
		<property name="password" value="SOLPROJECT"/>		
	</bean>
	
	<!-- MyBatis 설정 -->
	<!-- MyBatis가 DB에 접속할 수 있도록 도와주는 설정 -->
	<bean 	id="sqlSessionFactory"	
			class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classPath:/mybatis/mybatis.xml"/>
	</bean>
	
	<!-- MyBatis가 DB에 Query(SQL)를 실행하고 결과를 받아오게 도와주는 설정 -->
	<bean	id="sqlSessionTemplate"
			class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- Transaction (Commit: 반영, Rollback: 원복) 설정  -->
	<bean	id="transactionManager"	
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!--Rollback 규칙 설정 -->
	<tx:advice	id="rollbackRule" transaction-manager="transactionManager">
		<!-- create* => CRUD RuntimeException이 시작하면 롤백해라. -->
		<tx:attributes>
			<tx:method name="create*" rollback-for="RuntimeException"	/> 
			<tx:method name="read*" rollback-for="RuntimeException"	/> 
			<tx:method name="update*" rollback-for="RuntimeException"	/> 
			<tx:method name="delete*" rollback-for="RuntimeException"	/> 
			<tx:method name="increment" rollback-for="RuntimeException"	/> 
		</tx:attributes>
	</tx:advice>
	
	<!-- Transaction 대상 설정 -->
	<!-- 프로그램 실행 중에 자기가 알아서 동작 시켜주는 방법-->
	<aop:config>
		<aop:pointcut	expression="execution(public * com.sol..service.*ServiceImpl.*(..))" 
						id="pointCut"/>
		<aop:advisor advice-ref="rollbackRule" pointcut-ref="pointCut"/>
	</aop:config>
	
</beans>
